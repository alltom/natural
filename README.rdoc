= Natural

Natural provides a framework for answering 'naturally' worded questions like 'how many books did I buy last month' or 'list my Facebook friends'.

== Installation

gem install natural

== Example

require 'natural'
Natural.new('how many days of the week start with the letter T').answer

== Example Log

[n][scor] 45 how many, days of the week, start with the letter t
[n][scor] 41 days of the week, start with the letter t
[n][scor] 31 how many, days, week, start with the letter t
[n][scor] 30 how many, week, start with the letter t
[n][scor] 30 how many, days, start with the letter t
[n][scor] 29 how many, start with the letter t
[n][scor] 27 days, week, start with the letter t
[n][scor] 26 days, start with the letter t
[n][scor] 26 week, start with the letter t
[n][scor] 25 start with the letter t
[n][scor] 20 how many, days of the week
[n][scor] 16 days of the week
[n][scor] 06 how many, days, week
[n][scor] 05 how many, days
[n][scor] 05 how many, week
[n][scor] 04 how many
[n][scor] 02 days, week
[n][scor] 01 days
[n][scor] 01 week
[n]
[n][tree] * how many days of the week start with the letter T fragment (0..10)
[n][tree] |---> how many count (0..1)
[n][tree] |---> days of the week day_names (2..5)
[n][tree] +---+ start with the letter t starts_with_letter (6..10)
[n][tree]     |---> start with the letter fragment (6..9)
[n][tree]     +---> t fragment (10)
[n]
[n][orig] how many days of the week start with the letter T
[n][used] how many days of the week start with the letter t

== How To Use

* gem install natural
* create a class that inherits from Natural::Fragment
* override class method 'find' to specify which phrases it should match
* optional: override instance method 'data' to specify which data a match adds to the answer
* optional: override instance method 'filters' to specify which method to call on each data set in the answer to filter out results
* optional: override instance method 'aggregators' to specify which method to call on each data set to aggregate results
* optional: override instance method 'score' to specify how to value a match

This is a bit easier to understand by looking at an example, take a gander at: lib/natural/fragments/example.rb

== Parsing the Input

=== Simple Fragments

=== Compound Fragments

=== Alternative Spellings, Synonyms, and Expansions

Natural.new('how many days of the wek begin with the letter T').answer

[n][tree] * how many days of the wek begin with the letter T fragment (0..10)
[n][tree] |---> how many count (0..1)
[n][tree] |---+ days of the wek day_names (2..5)
[n][tree] |   |---> days of the fragment (2..4)
[n][tree] |   +---+ week spelling (5)
[n][tree]         +---> wek fragment (5)
[n][tree] +---+ start with the letter t starts_with_letter (6..10)
[n][tree]     |---+ begin with the letter fragment (6..9)
[n][tree] |       |---+ start synonym (6)
[n][tree] |           +---> begin fragment (6)
[n][tree] |       +---> with the letter fragment (7..9)
[n][tree]     +---> t fragment (10)

=== Scoring

== Generating the Answer

=== Sets

=== Filters

=== Aggregators

=== Putting Them Together

== Performance

Natural has not (yet) been optimized for cpu or memory usage. Natural works best with short questions and small sets of Fragments, alternative spellings, synonyms, and expansions.

== Contributing to Natural
 
* Check out the latest master to make sure the feature hasn't been implemented or the bug hasn't been fixed yet.
* Check out the issue tracker to make sure someone already hasn't requested it and/or contributed it.
* Fork the project.
* Start a feature/bugfix branch.
* Commit and push until you are happy with your contribution.
* Make sure to add tests for it. This is important so I don't break it in a future version unintentionally.
* Please try not to mess with the Rakefile, version, or history. If you want to have your own version, or is otherwise necessary, that is fine, but please isolate to its own commit so I can cherry-pick around it.

== Copyright

Copyright (c) 2012 Scott Bonds. See LICENSE.txt for
further details.
